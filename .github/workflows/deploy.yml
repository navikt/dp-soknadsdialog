name: Build and deploy

on: [push]

env:
  IMAGE: ghcr.io/${{ github.repository }}/dp-soknadsdialog:${{ github.sha }}
  LATEST_IMAGE: ghcr.io/${{ github.repository }}/dp-soknadsdialog:latest
  BASE_PATH: /dagpenger/dialog

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - run: npm install --no-save --no-audit --prefer-offline --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - run: npm rebuild && npm run prepare --if-present
      - run: npm test

  build:
    name: Build and Publish Docker image
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          registry-url: "https://npm.pkg.github.com"
      - run: cp $NPM_CONFIG_USERCONFIG .npmrc

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          pull: true
          tags: ${{ env.IMAGE }},${{ env.LATEST_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"

  deploy-dev:
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/vars-dev.yaml
          PRINT_PAYLOAD: true

      - name: Lag deployment i Sentry
        if: ${{ always() }}
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: https://sentry.gc.nav.no
          SENTRY_ORG: nav
          SENTRY_PROJECT: dp-soknadsdialog
        with:
          environment: development
          version: ${{ github.sha }}
          set_commits: skip

  deploy-prod:
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/vars-prod.yaml
          PRINT_PAYLOAD: true

      - name: Lag deployment i Sentry
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: https://sentry.gc.nav.no
          SENTRY_ORG: nav
          SENTRY_PROJECT: dp-soknadsdialog
        with:
          environment: production
          version: ${{ github.sha }}
          set_commits: skip
